# from loguru import logger
import DataBase

import asyncio
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import CommandStart, Command
from aiogram.client.default import DefaultBotProperties
from aiogram.types import FSInputFile, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.exceptions import TelegramBadRequest

# AIOGRAM
BOT_TOKEN = "8375169798:AAFfjT5_xf2OWuBxVQOFWx9xjmiTvwFlDzs"
ADMIN = [1020432840]  # –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤
bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode='HTML'))
dp = Dispatcher()

# DataBase
db = DataBase.DataBase()



# –û–±—Ä–∞–±–æ—Ç–∫–∞ –°—Ç–∞—Ä—Ç–∞ –ë–æ—Ç–∞
@dp.message(CommandStart())
async def command_start_handler(message: types.Message) -> None:
    # –ò–Ω–¥–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    for user_lot in db.users:
        # –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
        if user_lot["id"] == message.chat.id:
            if "recipient" in user_lot:
                db.users[db.get_index_user(message.chat.id)].pop('recipient',None)
                db.save_base()
            break
    else:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω
        db.create_user(int(message.chat.id))

    # –ó–∞—Ö–≤–∞—Ç –∫–ª—é—á–∞
    args = message.text.split()
    if len(args) == 2:
        # –ö–ª—é—á –ø–æ–ª—É—á–µ–Ω

        # –ü–æ–∏—Å–∫ –∫–ª—é—á–∞ –ø–æ –±–∞–∑–µ
        if db.get_index_user(args[1]) != None:
            # –ö–ª—é—á –ø–æ–ª—É—á–∞—Ç–µ–ª—è –Ω–∞–π–¥–µ–Ω
            await bot.send_message(
                message.from_user.id,
                text="üöÄ –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ–ª–æ–≤–µ–∫—É, –∫–æ—Ç–æ—Ä—ã–π –æ–ø—É–±–ª–∏–∫–æ–≤–∞–ª —ç—Ç—É —Å—Å—ã–ª–∫—É\n\nüñä –ù–∞–ø–∏—à–∏—Ç–µ —Å—é–¥–∞ –≤—Å—ë, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –µ–º—É –ø–µ—Ä–µ–¥–∞—Ç—å, –∏ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –æ–Ω –ø–æ–ª—É—á–∏—Ç –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–æ –Ω–µ –±—É–¥–µ—Ç –∑–Ω–∞—Ç—å –æ—Ç –∫–æ–≥–æ")

            # –î–∞—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω–¥–µ–∫—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è
            db.users[db.get_index_user(message.chat.id)]['recipient'] = int(args[1])
            db.save_base()
        else:
            await bot.send_message(
                message.from_user.id,
                text="–í–æ–∑–º–æ–∂–Ω–æ —Å—Å—ã–ª–∫–∞ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—ë —Å–ø—Ä–∞–≤–∏—Ç—å")



# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /get_url
@dp.message(F.text == "/get_url")
async def get_url(message: types.Message):

    sender_url = "http://t.me/ultra_anonim_question_bot?start=" + str(message.from_user.id)
    await bot.send_message(
        message.from_user.id,
        text="–í–æ—Ç –í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π:\n\n" + sender_url + "\n\n–ú–æ–∂–µ—Ç–µ –µ—ë —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –≤ —Å–≤–æ–µ–π –∏—Å—Ç–æ—Ä–∏–∏, Telegram-–∫–∞–Ω–∞–ª–µ –∏ —Ç–¥.")


# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è
@dp.message()
async def send_sms_user(message: types.Message):
    recipient_user = db.users[db.get_index_user(message.from_user.id)]['recipient']

    # –ü—Ä–æ–≤–µ–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
    if recipient_user is not None:
        # –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–∞–∑—É –ø–æ–ª—É—á–∞—Ç–µ–ª—è
        new_question = {
            "sender":message.from_user.id,
            "text":message.text
        }
        db.users[db.get_index_user(recipient_user)]['question'].append(new_question)
        db.save_base()

        # –û—Ç—á—ë—Ç –æ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–∏—Ç–µ–ª—é
        await bot.send_message(
            message.from_user.id,
            text="–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ!\n\n–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ, –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–∏—Å–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é\n\n–ß—Ç–æ –±—ã —Å–±—Ä–æ—Å–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞, –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π '/start'")

        # –û—Ç—á—ë—Ç –æ –ø–æ–ª—É—á–µ–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –ø–æ–ª—É—á–∞—Ç–µ–ª—é
        await bot.send_message(
            recipient_user,
            text="–í—ã –ø–æ–ª—É—á–∏–ª–∏ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!\n\n" + message.text)
    else:
        await bot.send_message(
            message.from_user.id,
            text="–ü–æ–ª—É—á–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!\n\n–ß—Ç–æ –±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –≤ –±–æ—Ç–∞ –ø–æ –µ–≥–æ —Å—Å—ã–ª–∫–µ.")



async def main() -> None:
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    try:
        await dp.start_polling(bot)
    except Exception:
        print(Exception)


if __name__ == "__main__":
    asyncio.run(main())